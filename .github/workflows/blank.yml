name: SGSI_Build-12

on:
  workflow_dispatch:
    inputs:
      ROM_URL:
        description: 'ROM_URL'
        required: true
        default: 'https://downloads.sourceforge.net/project/project-elixir/fourteen/veux/ProjectElixir_4.2_veux-14.0-20240429-0732-OFFICIAL.zip?ts=gAAAAABmPH4_Ih5poCJu9DS7B6SFGoIMukJRP-9Ei1Qz6o1wMBl7PT4dM-a4-FHMq0xDVA4tVG7_t99Nut0gRMEYIoQ3FUt1aA%3D%3D&use_mirror=liquidtelecom&r='
      ZIP_NAME:
        description: 'ZIP_NAME'
        required: true
        default: 'ProjectElixir_4.2_veux-14.0-20240429-0732-OFFICIAL.zip'
      REPACK_NAME:
        description: 'REPACK_NAME'
        required: true
        default: 'SGSI.zip'




jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Get the source code of this repositorie...
        uses: actions/checkout@main

      - name: Get variable configuration...
        run: |
          echo "BUILD_TIME=$(date +%s | md5sum | awk '{print substr($1,1,10)}')" >> $GITHUB_ENV

      - name: Clean up the environment‌‌...
        run: |
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          df -h

      - name: Configuration Environment‌‌...
        run: |
          sudo apt-get install -y git wget git zip unzip curl axel

      - name: Get the SGSI tool‌‌...
        run: |
          git clone --recurse-submodules https://github.com/xiaoxindada/SGSI-build-tool.git -b 12 $GITHUB_WORKSPACE/Tool-SGSI-build

      - name: Replace custom condensed content...
        run: |
          sudo chmod 777 -R $GITHUB_WORKSPACE/Tool-SGSI-build

      - name: Download ROM‌‌...
        run: |
          cd $GITHUB_WORKSPACE/Tool-SGSI-build
          mkdir ./tmp
          wget -U "Mozilla/5.0" ${{ github.event.inputs.ROM_URL }} -O "$GITHUB_WORKSPACE/Tool-SGSI-build/tmp/${{ github.event.inputs.ZIP_NAME }}"
          echo "zip_file: $(ls "$GITHUB_WORKSPACE/Tool-SGSI-build/tmp/")"

      - name: Configuration tool environment...
        run: |
          sudo sed -i 's/USE_MIRROR_FOR_PIP\=true/USE_MIRROR_FOR_PIP\=false/' $GITHUB_WORKSPACE/Tool-SGSI-build/setup.sh
          sudo bash $GITHUB_WORKSPACE/Tool-SGSI-build/setup.sh
          # sudo apt-get -y --purge remove "adoptopenjdk-11-hotspot"
          java --version

      - name: Make AB type GSI‌‌...
        run: |
          ls
          cd $GITHUB_WORKSPACE/Tool-SGSI-build
          sudo bash ./make.sh --AB Generic ./tmp

      - name: Repack Output File
        run: |            
             cd $GITHUB_WORKSPACE/Tool-SGSI-build
             pwd
             mkdir -p upload
             zip -r "${{ steps.config.outputs.repack_name }}" ./SGSI/*
             if [[ $(du -sb ""${{ github.event.inputs.ZIP_NAME }}"" | awk '{print $1}') -gt 2097152000 ]];then
                 echo -e "split packaging..."
                 tar -cpzf - "${{ github.event.inputs.ZIP_NAME }}" | split -d -b 1024m - "upload/"${{ github.event.inputs.ZIP_NAME }}"
             else
                 mv "${{ github.event.inputs.ZIP_NAME }}" upload/"${{ github.event.inputs.ZIP_NAME }}"
             fi
             ls "upload"

      - name: Upload to Release‌‌...
        uses: ncipollo/release-action@v1.8.0
        with:
          artifacts: "${{ github.workspace }}/Tool-SGSI-build/upload/*"
          tag: "${{ github.event.inputs.REPACK_NAME }}_${{ env.BUILD_TIME }}"
          bodyFile: "${{ github.workspace }}/Tool-SGSI-build/SGSI/build_info.txt"
          token: ${{ secrets.GITHUB_TOKEN }}
